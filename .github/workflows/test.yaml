name: Maybe test
on:
  workflow_dispatch:
    inputs:
      trigger_file:
        description: 'File path to check for changes'
        required: true
        default: 'mix.lock'
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
    
jobs:
  report_mix_deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/mix-dependency-submission@v1
  check_file_changed:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check_changes.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need at least 2 commits to compare changes
      
      - name: Check if file changed
        id: check_changes
        run: |
          # Set file path (use input or default to mix.lock)
          FILE_PATH="${{ github.event.inputs.trigger_file || 'mix.lock' }}"
          echo "Checking for changes in $FILE_PATH"

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For pull requests
            git fetch origin ${{ github.base_ref }} --depth=1
            if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "$FILE_PATH"; then
              echo "$FILE_PATH was changed in this PR"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "$FILE_PATH was not changed in this PR"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            # For pushes
            if git diff --name-only HEAD^ HEAD | grep -q "$FILE_PATH"; then
              echo "$FILE_PATH was changed in this commit"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "$FILE_PATH was not changed in this commit"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

  test:
    needs: check_file_changed
    if: ${{ needs.check_file_changed.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    name: ${{matrix.test_only}} flavour:${{matrix.flavour}} OTP ${{matrix.otp}} Elixir ${{matrix.elixir}}
    outputs:
      tests_passed: ${{ steps.set_test_success.outputs.tests_passed }}
    strategy:
      fail-fast: false
      matrix:
        flavour: ['social'] # 'community', 'cooperation'
        test_only: ['backend', 'ui', 'federation-all'] 
        otp: ['27.3.4'] # '26.2.5', '25.2.3'
        elixir: ['1.18.3'] # '1.14.5' 
        with_docker: ['partial']
        # ^ test with latest versions + oldest supported (i.e. versions available in debian stable)
    env:
      FLAVOUR: ${{matrix.flavour}}
      # MIX_TEST_ONLY: ${{matrix.test_only}}
      WITH_DOCKER: ${{matrix.with_docker}}
      CI: true
      MIX_ENV: test
      WITH_AI: "0"
      WITH_LV_NATIVE: "0"
      TEST_LOG_TRUNCATE: 340
      TEST_LOG_LEVEL: warning
      SECRET_KEY_BASE: "kSNSvYkWk14onNdbYzhEqFyG5TzpOO9+FFlk5sIrhTk0RV6+FeL/nM8DWQffDah4woepgQdrP6J8cjWGyehcWcRWvIIWXsghp0yY9/fEjgfUekD15P9LGRCmu6exIQ6g"
      SIGNING_SALT: "NPkqpeTx/q9xGQRWwRpqBWI7bCxeHMAF4L2PHntfjVtd8GZD2BQKe9KLnkIR5WbLVdZt24FWuR+Hy5WoXaZM4APydGvC2+w2enJmskOckX5VY1Bpvm7JGKu+QymgIgK/"
      ENCRYPTION_SALT: "l+QT/gkdX722f57qSAUc+bZcqm5ZduXY4D0hp0glEiKdR267JsZ1/CZlrlhADcD8kzuaZGFWvJ2dlr6sujbzGQV5e04lKVIsZh3gfd8eqQBckIqH6L8TDRRz4M07YE+F"
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.0
      with:
        access_token: ${{ github.token }}
    - name: Add system repositories
      run: |
        sudo apt update
        sudo apt install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt update
    - name: Install system deps
      run: sudo apt install git tar file make build-essential docker-compose-plugin && sudo snap install --edge just --classic
    - uses: actions/checkout@v4
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
    - name: Restore dependencies cache
      uses: actions/cache@v4
      id: cache
      with:
        path: |
            deps
            _build
        key: ${{ runner.os }}-mix-${{ hashFiles('/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install hex
      run: mix local.hex --force
    - name: Install rebar
      run: mix local.rebar --force
    # - name: Fetch initial deps
    #   run: just deps-get
    - name: Prepare environment
      run: just config 
    - name: Set things up 
      run: just pre-setup-dev && just _flavour_install ${{ env.FLAVOUR }} --yes && just _deps-post-get
    - name: Run tests
      run: just test-${{matrix.test_only}}
    - name: Check database down migrations 
      run: just db-rollback-all
    - name: Set test success output
      id: set_test_success
      run: echo "tests_passed=true" >> $GITHUB_OUTPUT

  # This job summarizes the test results and sets an output for downstream workflows
  test_success:
    needs: [test, check_file_changed]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.check_file_changed.outputs.changed == 'true' }}
    outputs:
      success: ${{ steps.check_test_success.outputs.all_tests_passed }}
    steps:
      - name: Check if all tests passed
        id: check_test_success
        run: |
          # Check overall matrix job status
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "All matrix jobs passed successfully"
            echo "all_tests_passed=true" >> $GITHUB_OUTPUT
          else
            echo "One or more matrix jobs failed"
            echo "all_tests_passed=false" >> $GITHUB_OUTPUT
          fi
          
  # This job runs when no tracked files have changed and marks the workflow as skipped
  mark_skipped:
    needs: check_file_changed
    runs-on: ubuntu-latest
    if: ${{ needs.check_file_changed.outputs.changed == 'false' }}
    steps:
      - name: Mark as skipped
        run: |
          echo "Tests were skipped because no relevant files changed"
      
      # Use GitHub's status check API to create a "neutral" status
      - name: Create skipped status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ github.token }}
          context: 'Tests'
          state: 'success'
          description: 'Tests skipped - no relevant files changed'